{"version":3,"sources":["components/NavBar.js","constants/actionTypes.js","actions/artists.js","actions/tracks.js","components/Artist.js","actions/favorites.js","components/Track.js","components/Search.js","actions/playlists.js","components/Playlist.js","components/Playlists.js","components/Favorite.js","components/PlaylistModal.js","components/Favorites.js","components/App.js","reducers/artists.js","reducers/tracks.js","reducers/favorites.js","reducers/playlists.js","reducers/index.js","api/artists.js","sagas/artists.js","api/tracks.js","sagas/tracks.js","api/favorites.js","sagas/favorites.js","api/playlists.js","sagas/playlists.js","sagas/index.js","store/index.js","index.js"],"names":["NavBar","react_default","a","createElement","className","react_router_dom","to","activeClassName","exact","ARTISTS_FETCH","ARTISTS_ADD","TRACKS_FETCH","TRACKS_ADD","FAVORITE_POST","FAVORITES_FETCH","FAVORITES_ADD","FAVORITE_REMOVE","FAVORITE_REMOVE_LOCAL","PLAYLISTS_FETCH","PLAYLISTS_ADD","PLAYLIST_POST","PLAYLIST_POST_FAVORITE","PLAYLIST_DELETE_FAVORITE","doFetchArtistsError","error","type","doAddArtists","artists","doAddTracks","tracks","doFetchTracksError","Artist","_ref","handleTrackShow","artist","onClick","artist_id","artist_name","doAddFavoriteError","doFetchFavoritesError","doAddFavorites","favorites","doRemoveFavoriteLocal","favoriteId","Track","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","iconClass","favorite","handleClick","bind","assertThisInitialized","setState","onAddFavorite","track","track_name","Component","connect","undefined","dispatch","trackData","songData","Search","artistName","showArtists","showTracks","handleChange","e","target","value","onFetchArtists","artistId","onFetchTracks","_this2","_this$props","artistsState","tracksState","id","placeholder","onChange","name","length","map","components_Artist","key","components_Track","track_id","doFetchArtists","doFetchTracks","doFetchPlaylists","doAddPlaylists","playlists","Playlist","refreshList","trackDetails","handleShowTracks","filterNullSongs","handleRemoveTrack","songs","filter","song","onDeletePlaylistTrack","refreshPlaylists","playlist_name","countLabel","playlistId","doDeletePlaylistFavorite","Playlists","playlistName","onFetchPlaylists","onPostPlaylist","playlist","components_Playlist","assign","playlistsState","doPostPlaylist","Favorite","onRemoveFavorite","genre","song_rating","title","openModal","doRemoveFavorite","PlaylistModal","addToPlaylist","closeModal","parseInt","_this$props2","Favorites","showModal","selectedFavorite","handleOpenModal","handleCloseModal","handleAddToPlaylist","onFetchFavorites","find","onPostPlaylistFavorite","_this$state","PlaylistModal_PlaylistModal","components_Favorite","favoritesState","doPostPlaylistFavorite","App","react_router","path","component","components_NavBar","INITIAL_STATE","applyAddArtists","action","artistsReducer","arguments","applyAddTracks","applyAddFavorites","applyRemoveFavorite","favoritesReducer","newState","applyAddPlaylists","playlistsReducer","rootReducer","combineReducers","tracksReducer","fetchArtists","artistsName","fetch","concat","mode","method","headers","Content-Type","then","response","json","handleFetchArtists","result","regenerator_default","wrap","_context","prev","next","sent","put","message","body","artist_list","t0","stop","_marked","fetchTracks","handleFetchTracks","track_list","tracks_marked","PLAY_URL","postFavorite","payload","track_rating","JSON","stringify","fetchFavorites","deleteFavorite","handlePostFavorite","handleFetchFavorites","handleRemoveFavorite","favorites_marked","_context2","_marked2","_context3","console","_marked3","fetchPlaylists","postPlaylist","postPlaylistFavorite","deletePlaylistFavorite","handleFetchPlaylists","handlePostPlaylist","handlePostPlaylistFavorite","handleDeletePlaylistFavorite","log","playlists_marked","playlists_marked2","playlists_marked3","_context4","_marked4","watchAll","all","takeEvery","sagas_marked","logger","createLogger","saga","createSagaMiddleware","store","createStore","applyMiddleware","run","rootSaga","rootElement","document","getElementById","ReactDOM","render","es","basename","App_App"],"mappings":"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","file":"static/js/main.536bf6d5.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport '../styles/navbar.css';\n\nconst NavBar = () => {\n  return(\n    <nav className=\"bottom-nav\">\n      <div>\n        <NavLink to=\"/favorites\" activeClassName=\"active\">\n          <i className=\"far fa-heart fa-5x fa-fw\"></i>\n        </NavLink>\n      </div>\n      <div>\n        <NavLink exact to=\"/\" activeClassName=\"active\">\n          <i className=\"fas fa-search fa-5x fa-fw\"></i>\n        </NavLink>\n      </div>\n      <div>\n        <NavLink to=\"/playlists\" activeClassName=\"active\">\n          <i className=\"fas fa-music fa-5x fa-fw\"></i>\n        </NavLink>\n      </div>\n    </nav>\n  );\n}\n\nexport default NavBar;\n","export const ARTISTS_FETCH = 'ARTISTS_FETCH';\nexport const ARTISTS_FETCH_ERROR = 'ARTISTS_FETCH_ERROR';\nexport const ARTISTS_ADD = 'ARTISTS_ADD';\n\nexport const TRACKS_FETCH = 'TRACKS_FETCH';\nexport const TRACKS_FETCH_ERROR = 'TRACKS_FETCH_ERROR';\nexport const TRACKS_ADD = 'TRACKS_ADD';\n\nexport const FAVORITE_POST = 'FAVORITE_POST';\nexport const FAVORITE_POST_ERROR = 'FAVORITE_POST_ERROR';\n\nexport const FAVORITES_FETCH = 'FAVORITES_FETCH';\nexport const FAVORITES_FETCH_ERROR = 'FAVORITES_FETCH_ERROR';\n\nexport const FAVORITES_ADD = 'FAVORITES_ADD';\nexport const FAVORITE_REMOVE = 'FAVORITE_REMOVE';\nexport const FAVORITE_REMOVE_LOCAL = 'FAVORITE_REMOVE_LOCAL';\n\nexport const PLAYLISTS_FETCH = 'PLAYLISTS_FETCH';\nexport const PLAYLISTS_ADD = 'PLAYLISTS_ADD';\nexport const PLAYLIST_POST = 'PLAYLIST_POST';\nexport const PLAYLIST_ADD = 'PLAYLIST_ADD';\nexport const PLAYLIST_POST_FAVORITE = 'PLAYLIST_POST_FAVORITE';\nexport const PLAYLIST_DELETE_FAVORITE = 'PLAYLIST_DELETE_FAVORITE';\n","import {\n  ARTISTS_FETCH,\n  ARTISTS_FETCH_ERROR,\n  ARTISTS_ADD\n} from '../constants/actionTypes';\n\nconst doFetchArtists = artistName => ({\n  type: ARTISTS_FETCH,\n  artistName\n});\n\nconst doFetchArtistsError = error => ({\n  type: ARTISTS_FETCH_ERROR,\n  error\n});\n\nconst doAddArtists = artists => ({\n  type: ARTISTS_ADD,\n  artists\n})\n\nexport {\n  doFetchArtists,\n  doFetchArtistsError,\n  doAddArtists\n};\n","import {\n  TRACKS_FETCH,\n  TRACKS_FETCH_ERROR,\n  TRACKS_ADD\n} from '../constants/actionTypes';\n\nconst doFetchTracks = artistId => ({\n  type: TRACKS_FETCH,\n  artistId\n});\n\nconst doAddTracks = tracks => ({\n  type: TRACKS_ADD,\n  tracks\n});\n\nconst doFetchTracksError = error => ({\n  type: TRACKS_FETCH_ERROR,\n  error\n});\n\nexport {\n  doFetchTracks,\n  doAddTracks,\n  doFetchTracksError\n}\n","import React from 'react';\n\nimport '../styles/artist.css';\n\nconst Artist = ({ handleTrackShow, artist }) => {\n    return(\n      <div className='listed-artist'>\n        <button className=\"artist_name\" \n                onClick={() => { handleTrackShow(artist.artist_id) }}\n        >\n          {artist.artist_name}\n        </button>\n      </div>\n    );\n}\n\nexport default Artist;\n","import {\n  FAVORITE_POST,\n  FAVORITE_POST_ERROR,\n  FAVORITES_FETCH,\n  FAVORITES_FETCH_ERROR,\n  FAVORITES_ADD,\n  FAVORITE_REMOVE,\n  FAVORITE_REMOVE_LOCAL\n} from '../constants/actionTypes';\n\nconst doAddFavorite = songData => ({\n  type: FAVORITE_POST,\n  songData\n});\n\nconst doAddFavoriteError = error => ({\n  type: FAVORITE_POST_ERROR,\n  error\n});\n\nconst doFetchFavorites = () => ({\n  type: FAVORITES_FETCH\n});\n\nconst doFetchFavoritesError = error => ({\n  type: FAVORITES_FETCH_ERROR,\n  error\n});\n\nconst doAddFavorites = favorites => ({\n  type: FAVORITES_ADD,\n  favorites\n});\n\nconst doRemoveFavorite = favoriteId => ({\n  type: FAVORITE_REMOVE,\n  favoriteId\n});\n\nconst doRemoveFavoriteLocal = favoriteId => ({\n  type: FAVORITE_REMOVE_LOCAL,\n  favoriteId\n});\n\nexport {\n  doAddFavorite,\n  doAddFavoriteError,\n  doFetchFavorites,\n  doFetchFavoritesError,\n  doAddFavorites,\n  doRemoveFavorite,\n  doRemoveFavoriteLocal\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { doAddFavorite } from '../actions/favorites';\n\nimport '../styles/track.css';\n\nconst mapDispatchToProps = dispatch => ({\n  onAddFavorite: (trackData) => dispatch(doAddFavorite(trackData))\n});\n\nclass Track extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      iconClass: 'favorite-button far fa-heart fa-1x fa-fw',\n      favorite: false\n    }\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    const { favorite } = this.state;\n    if(favorite) {\n      // Make API request to remove favorite\n      // Set favorite to false\n      // Set icon back to normal\n      this.setState({ \n        iconClass: 'favorite-button far fa-heart fa-1x fa-fw',\n        favorite: false\n      });\n    } else {\n      // Make API request to set as favorite\n      this.props.onAddFavorite(this.props.track);\n      // Set favorite to true\n      // Set icon to filled in\n      this.setState({ \n        iconClass: 'favorite-button fas fa-heart fa-1x fa-fw',\n        favorite: true\n      });\n    }\n  }\n\n  render() {\n    const { track_name } = this.props.track;\n    const { iconClass } = this.state;\n    return(\n      <div className='listed-song'>\n        <div>\n          <p className=\"name\">{track_name}</p>\n        </div>\n        <div>\n          <button onClick={this.handleClick}>\n            <i className={iconClass}></i>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  undefined,\n  mapDispatchToProps\n)(Track);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { doFetchArtists } from '../actions/artists';\nimport { doFetchTracks } from '../actions/tracks';\n\nimport Artist from './Artist';\nimport Track from './Track';\n\nimport '../styles/search.css';\n\nconst mapStateToProps = state => ({\n  artistsState: state.artistsState,\n  tracksState: state.tracksState\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFetchArtists: (artistName) =>  dispatch(doFetchArtists(artistName)),\n  onFetchTracks: (artistId) => dispatch(doFetchTracks(artistId))\n});\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      artistName: '',\n      showArtists: false,\n      showTracks: false\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleTrackShow = this.handleTrackShow.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ artistName: e.target.value });\n  }\n\n  handleClick(e) {\n    this.props.onFetchArtists(this.state.artistName);\n    this.setState({ showArtists: true, showTracks: false });\n  }\n\n  handleTrackShow(artistId) {\n    this.setState({ showArtists: false, showTracks: true });\n    this.props.onFetchTracks(artistId);\n  }\n\n  render() {\n    const { artistsState, tracksState } = this.props;\n    return(\n      <div className=\"search-container\">\n        <div className='search-header'>\n          <div className=\"search-header-text\">\n            <h1>search.</h1>\n          </div>\n          <div className=\"search-field\">\n            <input type=\"text\"\n                   id=\"artist-search-name\"\n                   placeholder=\"got an artist in mind?\"\n                   onChange={this.handleChange}\n            />\n            <button className=\"search-button\"\n                    id=\"artist-search\"\n                    type=\"button\"\n                    name=\"search\"\n                    onClick={this.handleClick}\n            >\n              <i className=\"searchy fas fa-search fa-5x fa-fw\"></i>\n            </button>\n          </div>\n\n          <div className=\"songs-header\">\n            <h2>browse available artists</h2>\n          </div>\n        </div>\n        <div className=\"fetch-data\">\n          {\n            artistsState.artists.length > 0 && this.state.showArtists &&\n            artistsState.artists.map(artist => {\n              return(\n                <Artist key={artist.artist.artist_id}\n                        artist={artist.artist}\n                        handleTrackShow={this.handleTrackShow}\n                />\n              )\n            })\n          }\n          {\n            tracksState.tracks.length > 0 && this.state.showTracks &&\n            tracksState.tracks.map(track => {\n              return(\n                <Track key={track.track.track_id} track={track.track}/>\n              )\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Search);\n","import {\n  PLAYLISTS_FETCH,\n  PLAYLISTS_ADD,\n  PLAYLIST_POST,\n  PLAYLIST_ADD,\n  PLAYLIST_POST_FAVORITE,\n  PLAYLIST_DELETE_FAVORITE\n} from '../constants/actionTypes';\n\nconst doFetchPlaylists = () => ({\n  type: PLAYLISTS_FETCH\n});\n\nconst doAddPlaylists = playlists => ({\n  type: PLAYLISTS_ADD,\n  playlists\n});\n\nconst doPostPlaylist = playlistName => ({\n  type: PLAYLIST_POST,\n  playlistName\n});\n\nconst doAddPlaylist = playlist => ({\n  type: PLAYLIST_ADD,\n  playlist\n});\n\nconst doPostPlaylistFavorite = (playlistId, favoriteId) => ({\n  type: PLAYLIST_POST_FAVORITE,\n  playlistId,\n  favoriteId\n});\n\nconst doDeletePlaylistFavorite = (playlistId, favoriteId) => ({\n  type: PLAYLIST_DELETE_FAVORITE,\n  playlistId,\n  favoriteId\n});\n\nexport {\n  doFetchPlaylists,\n  doAddPlaylists,\n  doPostPlaylist,\n  doAddPlaylist,\n  doPostPlaylistFavorite,\n  doDeletePlaylistFavorite\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { doDeletePlaylistFavorite } from '../actions/playlists';\n\nimport '../styles/playlist.css';\n\nconst mapDispatchToProps = dispatch => ({\n  onDeletePlaylistTrack: (playlistId, favoriteId) => dispatch(doDeletePlaylistFavorite(playlistId, favoriteId)),\n});\n\nclass Playlist extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showTracks: false,\n      iconClass: 'fas fa-chevron-circle-down',\n      refreshList: false\n    };\n\n    this.trackDetails = this.trackDetails.bind(this);\n    this.handleShowTracks = this.handleShowTracks.bind(this);\n    this.filterNullSongs = this.filterNullSongs.bind(this);\n    this.handleRemoveTrack = this.handleRemoveTrack.bind(this);\n  }\n\n  handleShowTracks() {\n    this.setState({ showTracks: !this.state.showTracks });\n    if(!this.state.showTracks) {\n      this.setState({ iconClass: 'fas fa-chevron-circle-up' });\n    } else {\n      this.setState({ iconClass: 'fas fa-chevron-circle-down' });\n    }\n  }\n\n  filterNullSongs() {\n    const { songs } = this.props;\n    return songs.filter(song => song.id !== null);\n  }\n\n  handleRemoveTrack(favoriteId) {\n    this.props.onDeletePlaylistTrack(this.props.id, favoriteId);\n    this.props.refreshPlaylists();\n    this.setState({ refreshList: !this.state.refreshList });\n  }\n\n  trackDetails() {\n    const songs = this.filterNullSongs();\n    if(songs.length > 0) {\n      return(\n        songs.map(song => {\n          return(\n            <div className=\"tracks-container\" key={song.id}>\n              <div className=\"tracks-info\">\n                <div className=\"track-name\">\n                  <strong>{song.name}</strong>\n                </div>\n                <div className=\"track-artist\">{song.artist_name}</div>\n              </div>\n              <div className=\"track-action\">\n                <button onClick={() => this.handleRemoveTrack(song.id)}>\n                  <i\n                    className=\"fas fa-minus-circle remove-track\"\n                  ></i>\n                </button>\n              </div>\n            </div>\n          );\n        })\n      );\n    } else {\n      return(\n        <div className=\"tracks-container\">\n          <p>Playlist empty, add some tracks.</p>\n        </div>\n      );\n    }\n  }\n\n  render() {\n    const { playlist_name } = this.props;\n    const songs = this.filterNullSongs();\n    const countLabel = songs.length === 1 ? 'track' : 'tracks';\n    return(\n      <div className=\"playlist-container\">\n        <div className=\"playlist-details-container\" onClick={this.handleShowTracks}>\n          <div className=\"playlist-name\">\n            <i className={this.state.iconClass}></i>&nbsp;\n            <strong>{playlist_name}</strong>\n          </div>\n          <div className=\"playlist-info\">\n            <p>{songs.length} {countLabel}</p>\n          </div>\n        </div>\n        <div className=\"track-details\">\n          {\n            this.state.showTracks ? this.trackDetails() : null\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  undefined,\n  mapDispatchToProps\n)(Playlist);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Playlist from './Playlist';\n\nimport { doFetchPlaylists, doPostPlaylist } from '../actions/playlists';\n\nimport '../styles/playlists.css';\n\nconst mapStateToProps = state => ({\n  playlists: state.playlistsState\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFetchPlaylists: () => dispatch(doFetchPlaylists()),\n  onPostPlaylist: (playlistName) => dispatch(doPostPlaylist(playlistName))\n});\n\nclass Playlists extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playlistName: ''\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onFetchPlaylists();\n  }\n\n  handleChange(e) {\n    this.setState({ playlistName: e.target.value });\n  }\n\n  handleClick() {\n    this.props.onPostPlaylist(this.state.playlistName);\n  }\n\n  render() {\n    const { playlists } = this.props.playlists;\n    return(\n      <div className=\"playlists-container\">\n        <div className=\"playlists-header\">\n          <div className=\"playlists-header-text\">\n            <h1>playlists.</h1>\n            <h2>jams for every occasion</h2>\n          </div>\n          <div className=\"search-field\">\n            <input type=\"text\"\n                   id=\"playlist-name\"\n                   placeholder=\"add a new playlist\"\n                   onChange={this.handleChange}\n            />\n            <button className=\"search-button\"\n                    id=\"artist-search\"\n                    type=\"button\"\n                    name=\"search\"\n                    onClick={this.handleClick}\n            >\n              <i className=\"searchy fas fa-music fa-5x fa-fw\"></i>\n            </button>\n          </div>\n        </div>\n        <div className=\"fetch-data\">\n          {\n            playlists.map(playlist => {\n              return <Playlist {...playlist} \n                               key={playlist.id}\n                               refreshPlaylists={this.props.onFetchPlaylists}\n                      />\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Playlists);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { doRemoveFavorite } from '../actions/favorites';\n\nimport '../styles/favorite.css';\n\nconst mapDispatchToProps = dispatch => ({\n  onRemoveFavorite: (favoriteId) => dispatch(doRemoveFavorite(favoriteId))\n});\n\nclass Favorite extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.onRemoveFavorite(this.props.id);\n  }\n\n  render() {\n    const { id, name, artist_name, genre, song_rating } = this.props;\n    return(\n      <div className=\"favorite-container\">\n        <div>\n          <p className=\"favorite-title\">{name}</p>\n          <p className=\"favorite-info\">\n            <strong>Artist:</strong> {artist_name} |&nbsp;\n            <strong>Genre:</strong> {genre} |&nbsp;\n            <strong>Rating:</strong> {song_rating}\n          </p>\n        </div>\n        <div className=\"favorite-actions\">\n          <button onClick={this.handleClick}>\n            <i title=\"Remove Favorite\" className=\"favorite-button fas fa-heart fa-fw\"></i>\n          </button>\n          <button onClick={() => {this.props.openModal(id)}}>\n            <i title=\"Add to Playlist\" className=\"playlist-button fas fa-music fa-fw\"></i>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  undefined,\n  mapDispatchToProps\n)(Favorite);\n","import React, { Component } from 'react';\n\nimport '../styles/playlist_modal.css';\n\nexport default class PlaylistModal extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playlist: '-1',\n      error: null\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ playlist: e.target.value, error: null });\n  }\n\n  handleClick() {\n    const { playlist } = this.state;\n    const { addToPlaylist, favorite, closeModal } = this.props;\n\n    if(playlist === '-1') {\n      this.setState({ error: 'Select a valid playlist.' });\n      return;\n    }\n\n    addToPlaylist(parseInt(playlist), favorite.id);\n    closeModal();\n  }\n\n  render() {\n    const { closeModal, playlists, favorite } = this.props;\n    const { error } = this.state;\n    return(\n      <div className=\"modal\">\n        <div className=\"modal-box\">\n          <div className=\"modal-header\">\n            <div className=\"modal-header-text\">\n              <h1>add to playlist.</h1>\n              <h2>add <em>{favorite.name}</em> to selected playlist below</h2>\n            </div>\n          </div>\n          <div className=\"modal-content\">\n            <div className=\"playlist-field\">\n              <select onChange={this.handleChange}>\n                <option value=\"-1\">Select Playlist...</option>\n                {\n                  playlists.map(playlist => {\n                    return(\n                      <option\n                        key={playlist.id}\n                        value={playlist.id}>\n                        {playlist.playlist_name}\n                      </option>\n                    )\n                  })\n                }\n              </select>\n              <button onClick={this.handleClick}>\n                <i className=\"fas fa-music fa-5x fa-fw\"></i>\n              </button>\n            </div>\n              {\n                error && <div className=\"playlist-error\">{error}</div>\n              }\n          </div>\n          <div className=\"modal-footer\">\n            <button onClick={closeModal}>Close</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport { doFetchFavorites } from '../actions/favorites';\nimport { doFetchPlaylists, doPostPlaylistFavorite } from '../actions/playlists';\nimport '../styles/favorites.css';\n\nimport Favorite from './Favorite';\nimport PlaylistModal from './PlaylistModal';\n\nconst mapStateToProps = state => ({\n  favorites: state.favoritesState,\n  playlists: state.playlistsState\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFetchFavorites: () => dispatch(doFetchFavorites()),\n  onFetchPlaylists: () => dispatch(doFetchPlaylists()),\n  onPostPlaylistFavorite: (playlistId, favoriteId) => dispatch(doPostPlaylistFavorite(playlistId, favoriteId))\n})\n\nclass Favorites extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showModal: false,\n      selectedFavorite: null\n    }\n\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.handleAddToPlaylist = this.handleAddToPlaylist.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onFetchFavorites();\n    this.props.onFetchPlaylists();\n  }\n\n  handleOpenModal(favoriteId) {\n    const { favorites } = this.props.favorites;\n    this.setState({\n      showModal: true,\n      selectedFavorite: favorites.find(favorite => favorite.id === favoriteId)\n    });\n  }\n\n  handleCloseModal() {\n    this.setState({ showModal: false });\n  }\n\n  handleAddToPlaylist(playlistId, favoriteId) {\n    this.props.onPostPlaylistFavorite(playlistId, favoriteId);\n  }\n\n  render() {\n    const { favorites } = this.props.favorites;\n    const { showModal, selectedFavorite } = this.state;\n    const { playlists } = this.props.playlists;\n    return(\n      <div className=\"favorites-container\">\n        {\n          showModal && playlists.length > 0 &&\n          <PlaylistModal closeModal={this.handleCloseModal}\n                         playlists={playlists}\n                         favorite={selectedFavorite}\n                         addToPlaylist={this.handleAddToPlaylist}\n          />\n        }\n        <div className=\"favorites-header\">\n          <div className=\"favorites-header-text\">\n            <h1>favorites.</h1>\n            <h2>songs you can't live without</h2>\n          </div>\n        </div>\n        <div className=\"fetch-data\">\n          {\n            favorites.map(favorite => {\n              return <Favorite {...favorite} \n                               key={favorite.id}\n                               openModal={this.handleOpenModal}\n                     />\n            })\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Favorites);\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport NavBar from './NavBar';\nimport Search from './Search';\nimport Playlists from './Playlists';\nimport Favorites from './Favorites';\n\nimport '../styles/reset.css';\nimport '../styles/main.css';\n\nexport default class App extends Component {\n  render() {\n    return(\n      <div>\n        <Switch>\n          <Route exact path='/' component={Search} />\n          <Route path='/playlists' component={Playlists} />\n          <Route path='/favorites' component={Favorites} />\n        </Switch>\n        <NavBar />\n      </div>\n    )\n  }\n}\n","import {\n  ARTISTS_ADD\n} from '../constants/actionTypes';\n\nconst INITIAL_STATE = {\n  artists: [],\n  error: null\n};\n\nconst applyAddArtists = (state, action) => ({\n  artists: action.artists,\n  error: null\n});\n\nfunction artistsReducer(state = INITIAL_STATE, action) {\n  switch(action.type) {\n    case ARTISTS_ADD : {\n      return applyAddArtists(state, action);\n    }\n    default : return state;\n  }\n}\n\nexport default artistsReducer;\n","import {\n  TRACKS_ADD\n} from '../constants/actionTypes';\n\nconst INITIAL_STATE = {\n  tracks: [],\n  error: null\n};\n\nconst applyAddTracks = (state, action) => ({\n  tracks: action.tracks,\n  error: null\n});\n\nfunction artistsReducer(state = INITIAL_STATE, action) {\n  switch(action.type) {\n    case TRACKS_ADD : {\n      return applyAddTracks(state, action);\n    }\n    default : return state;\n  }\n}\n\nexport default artistsReducer;\n","import {\n  FAVORITES_ADD,\n  FAVORITE_REMOVE_LOCAL\n} from '../constants/actionTypes';\n\nconst INITIAL_STATE = {\n  favorites: [],\n  error: null\n};\n\nconst applyAddFavorites = (state, action) => ({\n  favorites: action.favorites,\n  error: null\n});\n\nconst applyRemoveFavorite = (state, action) => ({\n  favorites: state,\n  error: null\n});\n\nfunction favoritesReducer(state = INITIAL_STATE, action) {\n  switch(action.type) {\n    case FAVORITES_ADD : {\n      return applyAddFavorites(state, action)\n    }\n    case FAVORITE_REMOVE_LOCAL : {\n      let newState = Object.assign([], state);\n      newState = newState.favorites.filter(favorite => {\n        return favorite.id !== action.favoriteId;\n      })\n      return applyRemoveFavorite(newState, action);\n    }\n    default : return state;\n  }\n}\n\nexport default favoritesReducer;\n","import {\n  PLAYLISTS_ADD\n} from '../constants/actionTypes';\n\nconst INITIAL_STATE = {\n  playlists: [],\n  error: null\n};\n\nconst applyAddPlaylists = (state, action) => ({\n  playlists: action.playlists,\n  error: null\n});\n\nfunction playlistsReducer(state = INITIAL_STATE, action) {\n  switch(action.type) {\n    case PLAYLISTS_ADD : {\n      return applyAddPlaylists(state, action);\n    }\n    default : return state;\n  }\n}\n\nexport default playlistsReducer;\n","import { combineReducers } from 'redux';\n\nimport artistsReducer from './artists';\nimport tracksReducer from './tracks';\nimport favoritesReducer from './favorites';\nimport playlistsReducer from './playlists';\n\nconst rootReducer = combineReducers({\n  artistsState: artistsReducer,\n  tracksState: tracksReducer,\n  favoritesState: favoritesReducer,\n  playlistsState: playlistsReducer\n});\n\nexport default rootReducer;\n","const MUSIX_MATCH_URL = 'https://api.musixmatch.com/ws/1.1';\n\nconst fetchArtists = artistsName => {\n  return fetch(`https://cors-anywhere.herokuapp.com/${MUSIX_MATCH_URL}/artist.search?q_artist=${artistsName}&format=json&apikey=6ad28f3bfd8438979401eba5775e6ae2&page_size=30`, {\n    mode: 'cors',\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  })\n    .then(response => response.json())\n}\n\nexport { fetchArtists };\n","import { call, put } from 'redux-saga/effects';\n\nimport { doAddArtists, doFetchArtistsError } from '../actions/artists';\nimport { fetchArtists } from '../api/artists';\n\nfunction* handleFetchArtists(action) {\n  const { artistName } = action;\n  try {\n    const result = yield call(fetchArtists, artistName);\n    yield put(doAddArtists(result.message.body.artist_list));\n  } catch (error) {\n    yield put(doFetchArtistsError(error));\n  }\n}\n\nexport {\n  handleFetchArtists\n};\n","const MUSIX_MATCH_URL = 'https://api.musixmatch.com/ws/1.1';\n\nconst fetchTracks = artistId => {\n  return fetch(`https://cors-anywhere.herokuapp.com/${MUSIX_MATCH_URL}/track.search?f_artist_id=${artistId}&format=json&apikey=6ad28f3bfd8438979401eba5775e6ae2&page_size=30&s_track_rating=desc`, {\n    mode: 'cors',\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  })\n    .then(response => response.json())\n}\n\nexport { fetchTracks };\n","import { call, put } from 'redux-saga/effects';\n\nimport { doAddTracks, doFetchTracksError } from '../actions/tracks';\nimport { fetchTracks } from '../api/tracks';\n\nfunction* handleFetchTracks(action) {\n  const { artistId } = action;\n  try {\n    const result = yield call(fetchTracks, artistId);\n    yield put(doAddTracks(result.message.body.track_list));\n  } catch (error) {\n    yield put(doFetchTracksError(error));\n  }\n}\n\nexport {\n  handleFetchTracks\n};\n","const PLAY_URL = 'https://sheltered-lake-54213.herokuapp.com';\n\nconst postFavorite = songData => {\n  const payload = {\n    name: songData.track_name,\n    artist_name: songData.artist_name,\n    genre: 'Genre',\n    song_rating: songData.track_rating\n  }\n  return fetch(PLAY_URL + '/api/v1/songs', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(payload)\n  });\n};\n\nconst fetchFavorites = () => {\n  return fetch(PLAY_URL + '/api/v1/songs', {\n    method: 'GET'\n  })\n    .then(response => response.json())\n};\n\nconst deleteFavorite = favoriteId => {\n  return fetch(PLAY_URL + '/api/v1/songs/' + favoriteId, {\n    method: 'DELETE',\n    mode: 'cors'\n  });\n};\n\nexport {\n  postFavorite,\n  fetchFavorites,\n  deleteFavorite\n};\n","import { call, put } from 'redux-saga/effects';\n\nimport {\n  doAddFavoriteError,\n  doAddFavorites,\n  doFetchFavoritesError,\n  doRemoveFavoriteLocal\n} from '../actions/favorites';\nimport { postFavorite, fetchFavorites, deleteFavorite } from '../api/favorites';\n\nfunction* handlePostFavorite(action) {\n  const { songData } = action;\n  try {\n    yield call(postFavorite, songData);\n  } catch(error) {\n    yield put(doAddFavoriteError(error));\n  }\n}\n\nfunction* handleFetchFavorites(action) {\n  try {\n    const result = yield call(fetchFavorites);\n    yield put(doAddFavorites(result));\n  } catch(error) {\n    yield put(doFetchFavoritesError(error));\n  }\n}\n\nfunction* handleRemoveFavorite(action) {\n  const { favoriteId } = action;\n  try {\n    yield call(deleteFavorite, favoriteId);\n    yield put(doRemoveFavoriteLocal(favoriteId));\n  } catch(error) {\n    console.error(error);\n  }\n}\n\nexport {\n  handlePostFavorite,\n  handleFetchFavorites,\n  handleRemoveFavorite\n};\n","const PLAY_URL = 'https://sheltered-lake-54213.herokuapp.com';\n\nconst fetchPlaylists = () => {\n  return fetch(PLAY_URL + '/api/v1/playlists', {\n    method: 'GET'\n  })\n    .then(response => response.json())\n};\n\nconst postPlaylist = playlistName => {\n  const payload = {\n    playlist_name: playlistName\n  };\n\n  return fetch(PLAY_URL + '/api/v1/playlists', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(payload)\n  })\n    .then(response => response.json())\n};\n\nconst postPlaylistFavorite = (playlistId, favoriteId) => {\n  fetch(`${PLAY_URL}/api/v1/playlists/${playlistId}/songs/${favoriteId}`, {\n    method: 'POST'\n  })\n};\n\nconst deletePlaylistFavorite = (playlistId, favoriteId) => {\n  fetch(`${PLAY_URL}/api/v1/playlists/${playlistId}/songs/${favoriteId}`, {\n    method: 'DELETE'\n  })\n};\n\nexport {\n  fetchPlaylists,\n  postPlaylist,\n  postPlaylistFavorite,\n  deletePlaylistFavorite\n};\n","import { call, put } from 'redux-saga/effects';\n\nimport {\n  doAddPlaylists,\n  doFetchPlaylists,\n} from '../actions/playlists';\nimport {\n  fetchPlaylists,\n  postPlaylist,\n  postPlaylistFavorite,\n  deletePlaylistFavorite\n} from '../api/playlists';\n\nfunction* handleFetchPlaylists(action) {\n  try {\n    const result = yield call(fetchPlaylists);\n    yield put(doAddPlaylists(result));\n  } catch(error) {\n    console.log(error);\n  }\n}\n\nfunction* handlePostPlaylist(action) {\n  try {\n    yield call(postPlaylist, action.playlistName);\n    yield put(doFetchPlaylists());\n  } catch(error) {\n    console.error(error);\n  }\n}\n\nfunction* handlePostPlaylistFavorite(action) {\n  try {\n    yield call(postPlaylistFavorite, action.playlistId, action.favoriteId);\n  } catch(error) {\n    console.error(error);\n  }\n}\n\nfunction* handleDeletePlaylistFavorite(action) {\n  try {\n    yield call(deletePlaylistFavorite, action.playlistId, action.favoriteId);\n  } catch(error) {\n    console.error(error);\n  }\n}\n\nexport {\n  handleFetchPlaylists,\n  handlePostPlaylist,\n  handlePostPlaylistFavorite,\n  handleDeletePlaylistFavorite\n};\n","import { takeEvery, all } from 'redux-saga/effects';\n\nimport {\n  ARTISTS_FETCH,\n  TRACKS_FETCH,\n  FAVORITE_POST,\n  FAVORITES_FETCH,\n  FAVORITE_REMOVE,\n  PLAYLISTS_FETCH,\n  PLAYLIST_POST,\n  PLAYLIST_POST_FAVORITE,\n  PLAYLIST_DELETE_FAVORITE\n} from '../constants/actionTypes';\n\nimport { handleFetchArtists } from './artists';\nimport { handleFetchTracks } from './tracks';\nimport {\n  handlePostFavorite,\n  handleFetchFavorites,\n  handleRemoveFavorite\n} from  './favorites';\nimport {\n  handleFetchPlaylists,\n  handlePostPlaylist,\n  handlePostPlaylistFavorite,\n  handleDeletePlaylistFavorite\n} from './playlists';\n\n\nfunction *watchAll() {\n  yield all([\n    takeEvery(ARTISTS_FETCH, handleFetchArtists),\n    takeEvery(TRACKS_FETCH, handleFetchTracks),\n    takeEvery(FAVORITE_POST, handlePostFavorite),\n    takeEvery(FAVORITES_FETCH, handleFetchFavorites),\n    takeEvery(FAVORITE_REMOVE, handleRemoveFavorite),\n    takeEvery(PLAYLISTS_FETCH, handleFetchPlaylists),\n    takeEvery(PLAYLIST_POST, handlePostPlaylist),\n    takeEvery(PLAYLIST_POST_FAVORITE, handlePostPlaylistFavorite),\n    takeEvery(PLAYLIST_DELETE_FAVORITE, handleDeletePlaylistFavorite)\n  ])\n}\n\nexport default watchAll;\n","import { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst logger = createLogger();\nconst saga = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  undefined,\n  applyMiddleware(saga, logger)\n);\n\nsaga.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './components/App';\n\nimport store from './store';\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename=\"/playfe\">\n      <App />\n    </BrowserRouter>\n  </Provider>, \n  rootElement\n);\n"],"sourceRoot":""}