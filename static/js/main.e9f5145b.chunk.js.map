{"version":3,"sources":["components/NavBar.js","constants/actionTypes.js","actions/artists.js","actions/tracks.js","components/Artist.js","actions/favorites.js","components/Track.js","components/Search.js","components/Playlist.js","actions/playlists.js","components/Playlists.js","components/Favorite.js","components/Favorites.js","components/App.js","reducers/artists.js","reducers/tracks.js","reducers/favorites.js","reducers/playlists.js","reducers/index.js","api/artists.js","sagas/artists.js","api/tracks.js","sagas/tracks.js","api/favorites.js","sagas/favorites.js","api/playlists.js","sagas/playlists.js","sagas/index.js","store/index.js","index.js"],"names":["NavBar","react_default","a","createElement","className","react_router_dom","to","activeStyle","exact","Component","ARTISTS_FETCH","ARTISTS_ADD","TRACKS_FETCH","TRACKS_ADD","FAVORITE_POST","FAVORITES_FETCH","FAVORITES_ADD","FAVORITE_REMOVE","FAVORITE_REMOVE_LOCAL","PLAYLISTS_FETCH","PLAYLISTS_ADD","PLAYLIST_POST","doFetchArtistsError","error","type","doAddArtists","artists","doAddTracks","tracks","doFetchTracksError","Artist","_ref","handleTrackShow","artist","onClick","artist_id","artist_name","doAddFavoriteError","doFetchFavoritesError","doAddFavorites","favorites","doRemoveFavoriteLocal","favoriteId","Track","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","iconClass","favorite","handleClick","bind","assertThisInitialized","setState","onAddFavorite","track","track_name","connect","undefined","dispatch","trackData","songData","Search","artistName","showArtists","showTracks","handleChange","e","target","value","onFetchArtists","artistId","onFetchTracks","_this2","_this$props","artistsState","tracksState","id","placeholder","onChange","name","length","map","components_Artist","key","components_Track","track_id","doFetchArtists","doFetchTracks","Playlist","trackDetails","handleShowTracks","songs","song","playlist_name","countLabel","doFetchPlaylists","doAddPlaylists","playlists","Playlists","playlistName","onFetchPlaylists","onPostPlaylist","playlist","components_Playlist","assign","playlistsState","doPostPlaylist","Favorite","onRemoveFavorite","genre","song_rating","title","doRemoveFavorite","Favorites","onFetchFavorites","components_Favorite","favoritesState","App","react_router","path","component","NavBar_NavBar","INITIAL_STATE","applyAddArtists","action","artistsReducer","arguments","applyAddTracks","applyAddFavorites","applyRemoveFavorite","favoritesReducer","newState","filter","applyAddPlaylists","playlistsReducer","rootReducer","combineReducers","tracksReducer","fetchArtists","artistsName","fetch","concat","mode","method","headers","Content-Type","then","response","json","handleFetchArtists","result","regenerator_default","wrap","_context","prev","next","sent","put","message","body","artist_list","t0","stop","_marked","fetchTracks","handleFetchTracks","track_list","tracks_marked","PLAY_URL","postFavorite","payload","track_rating","JSON","stringify","fetchFavorites","deleteFavorite","handlePostFavorite","handleFetchFavorites","handleRemoveFavorite","favorites_marked","_context2","_marked2","_context3","console","_marked3","fetchPlaylists","postPlaylist","handleFetchPlaylists","handlePostPlaylist","log","playlists_marked","playlists_marked2","watchAll","all","takeEvery","sagas_marked","logger","createLogger","saga","createSagaMiddleware","store","createStore","applyMiddleware","run","rootSaga","rootElement","document","getElementById","ReactDOM","render","es","App_App"],"mappings":"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","file":"static/js/main.e9f5145b.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport { NavLink } from 'react-router-dom';\n\nimport '../styles/navbar.css';\n\nexport default class NavBar extends Component {\n  render() {\n    return(\n      <nav className=\"bottom-nav\">\n        <div>\n          <NavLink to=\"/favorites\" activeStyle=\"active\">\n            <i className=\"far fa-heart fa-5x fa-fw\"></i>\n          </NavLink>\n        </div>\n        <div>\n          <NavLink exact to=\"/\" activeStyle=\"active\">\n            <i className=\"fas fa-search fa-5x fa-fw\"></i>\n          </NavLink>\n        </div>\n        <div>\n          <NavLink to=\"/playlists\" activeStyle=\"active\">\n            <i className=\"fas fa-music fa-5x fa-fw\"></i>\n          </NavLink>\n        </div>\n      </nav>\n    )\n  }\n}\n","export const ARTISTS_FETCH = 'ARTISTS_FETCH';\nexport const ARTISTS_FETCH_ERROR = 'ARTISTS_FETCH_ERROR';\nexport const ARTISTS_ADD = 'ARTISTS_ADD';\n\nexport const TRACKS_FETCH = 'TRACKS_FETCH';\nexport const TRACKS_FETCH_ERROR = 'TRACKS_FETCH_ERROR';\nexport const TRACKS_ADD = 'TRACKS_ADD';\n\nexport const FAVORITE_POST = 'FAVORITE_POST';\nexport const FAVORITE_POST_ERROR = 'FAVORITE_POST_ERROR';\n\nexport const FAVORITES_FETCH = 'FAVORITES_FETCH';\nexport const FAVORITES_FETCH_ERROR = 'FAVORITES_FETCH_ERROR';\n\nexport const FAVORITES_ADD = 'FAVORITES_ADD';\nexport const FAVORITE_REMOVE = 'FAVORITE_REMOVE';\nexport const FAVORITE_REMOVE_LOCAL = 'FAVORITE_REMOVE_LOCAL';\n\nexport const PLAYLISTS_FETCH = 'PLAYLISTS_FETCH';\nexport const PLAYLISTS_ADD = 'PLAYLISTS_ADD';\nexport const PLAYLIST_POST = 'PLAYLIST_POST';\nexport const PLAYLIST_ADD = 'PLAYLIST_ADD';\n","import {\n  ARTISTS_FETCH,\n  ARTISTS_FETCH_ERROR,\n  ARTISTS_ADD\n} from '../constants/actionTypes';\n\nconst doFetchArtists = artistName => ({\n  type: ARTISTS_FETCH,\n  artistName\n});\n\nconst doFetchArtistsError = error => ({\n  type: ARTISTS_FETCH_ERROR,\n  error\n});\n\nconst doAddArtists = artists => ({\n  type: ARTISTS_ADD,\n  artists\n})\n\nexport {\n  doFetchArtists,\n  doFetchArtistsError,\n  doAddArtists\n};\n","import {\n  TRACKS_FETCH,\n  TRACKS_FETCH_ERROR,\n  TRACKS_ADD\n} from '../constants/actionTypes';\n\nconst doFetchTracks = artistId => ({\n  type: TRACKS_FETCH,\n  artistId\n});\n\nconst doAddTracks = tracks => ({\n  type: TRACKS_ADD,\n  tracks\n});\n\nconst doFetchTracksError = error => ({\n  type: TRACKS_FETCH_ERROR,\n  error\n});\n\nexport {\n  doFetchTracks,\n  doAddTracks,\n  doFetchTracksError\n}\n","import React from 'react';\n\nimport '../styles/artist.css';\n\nconst Artist = ({ handleTrackShow, artist }) => {\n    return(\n      <div className='listed-artist'>\n        <button className=\"artist_name\" \n                onClick={() => { handleTrackShow(artist.artist_id) }}\n        >\n          {artist.artist_name}\n        </button>\n      </div>\n    );\n}\n\nexport default Artist;\n","import {\n  FAVORITE_POST,\n  FAVORITE_POST_ERROR,\n  FAVORITES_FETCH,\n  FAVORITES_FETCH_ERROR,\n  FAVORITES_ADD,\n  FAVORITE_REMOVE,\n  FAVORITE_REMOVE_LOCAL\n} from '../constants/actionTypes';\n\nconst doAddFavorite = songData => ({\n  type: FAVORITE_POST,\n  songData\n});\n\nconst doAddFavoriteError = error => ({\n  type: FAVORITE_POST_ERROR,\n  error\n});\n\nconst doFetchFavorites = () => ({\n  type: FAVORITES_FETCH\n});\n\nconst doFetchFavoritesError = error => ({\n  type: FAVORITES_FETCH_ERROR,\n  error\n});\n\nconst doAddFavorites = favorites => ({\n  type: FAVORITES_ADD,\n  favorites\n});\n\nconst doRemoveFavorite = favoriteId => ({\n  type: FAVORITE_REMOVE,\n  favoriteId\n});\n\nconst doRemoveFavoriteLocal = favoriteId => ({\n  type: FAVORITE_REMOVE_LOCAL,\n  favoriteId\n});\n\nexport {\n  doAddFavorite,\n  doAddFavoriteError,\n  doFetchFavorites,\n  doFetchFavoritesError,\n  doAddFavorites,\n  doRemoveFavorite,\n  doRemoveFavoriteLocal\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { doAddFavorite } from '../actions/favorites';\n\nimport '../styles/track.css';\n\nconst mapDispatchToProps = dispatch => ({\n  onAddFavorite: (trackData) => dispatch(doAddFavorite(trackData))\n});\n\nclass Track extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      iconClass: 'favorite-button far fa-heart fa-1x fa-fw',\n      favorite: false\n    }\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    const { favorite } = this.state;\n    if(favorite) {\n      // Make API request to remove favorite\n      // Set favorite to false\n      // Set icon back to normal\n      this.setState({ \n        iconClass: 'favorite-button far fa-heart fa-1x fa-fw',\n        favorite: false\n      });\n    } else {\n      // Make API request to set as favorite\n      this.props.onAddFavorite(this.props.track);\n      // Set favorite to true\n      // Set icon to filled in\n      this.setState({ \n        iconClass: 'favorite-button fas fa-heart fa-1x fa-fw',\n        favorite: true\n      });\n    }\n  }\n\n  render() {\n    const { track_name } = this.props.track;\n    const { iconClass } = this.state;\n    return(\n      <div className='listed-song'>\n        <div>\n          <p className=\"name\">{track_name}</p>\n        </div>\n        <div>\n          <button onClick={this.handleClick}>\n            <i className={iconClass}></i>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  undefined,\n  mapDispatchToProps\n)(Track);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { doFetchArtists } from '../actions/artists';\nimport { doFetchTracks } from '../actions/tracks';\n\nimport Artist from './Artist';\nimport Track from './Track';\n\nimport '../styles/search.css';\n\nconst mapStateToProps = state => ({\n  artistsState: state.artistsState,\n  tracksState: state.tracksState\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFetchArtists: (artistName) =>  dispatch(doFetchArtists(artistName)),\n  onFetchTracks: (artistId) => dispatch(doFetchTracks(artistId))\n});\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      artistName: '',\n      showArtists: false,\n      showTracks: false\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleTrackShow = this.handleTrackShow.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({ artistName: e.target.value });\n  }\n\n  handleClick(e) {\n    this.props.onFetchArtists(this.state.artistName);\n    this.setState({ showArtists: true, showTracks: false });\n  }\n\n  handleTrackShow(artistId) {\n    this.setState({ showArtists: false, showTracks: true });\n    this.props.onFetchTracks(artistId);\n  }\n\n  render() {\n    const { artistsState, tracksState } = this.props;\n    return(\n      <div className=\"search-container\">\n        <div className='search-header'>\n          <div className=\"search-header-text\">\n            <h1>search.</h1>\n          </div>\n          <div className=\"search-field\">\n            <input type=\"text\"\n                   id=\"artist-search-name\"\n                   placeholder=\"got an artist in mind?\"\n                   onChange={this.handleChange}\n            />\n            <button className=\"search-button\"\n                    id=\"artist-search\"\n                    type=\"button\"\n                    name=\"search\"\n                    onClick={this.handleClick}\n            >\n              <i className=\"searchy fas fa-search fa-5x fa-fw\"></i>\n            </button>\n          </div>\n\n          <div className=\"songs-header\">\n            <h2>browse available artists</h2>\n          </div>\n        </div>\n        <div className=\"fetch-data\">\n          {\n            artistsState.artists.length > 0 && this.state.showArtists &&\n            artistsState.artists.map(artist => {\n              return(\n                <Artist key={artist.artist.artist_id}\n                        artist={artist.artist}\n                        handleTrackShow={this.handleTrackShow}\n                />\n              )\n            })\n          }\n          {\n            tracksState.tracks.length > 0 && this.state.showTracks &&\n            tracksState.tracks.map(track => {\n              return(\n                <Track key={track.track.track_id} track={track.track}/>\n              )\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Search);\n","import React, { Component } from 'react';\n\nimport '../styles/playlist.css';\n\nclass Playlist extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showTracks: false,\n      iconClass: 'fas fa-chevron-circle-down'\n    };\n\n    this.trackDetails = this.trackDetails.bind(this);\n    this.handleShowTracks = this.handleShowTracks.bind(this);\n  }\n\n  handleShowTracks() {\n    this.setState({ showTracks: !this.state.showTracks });\n    if(!this.state.showTracks) {\n      this.setState({ iconClass: 'fas fa-chevron-circle-up' });\n    } else {\n      this.setState({ iconClass: 'fas fa-chevron-circle-down' });\n    }\n  }\n\n  trackDetails() {\n    const { songs } = this.props;\n    if(songs.length > 0) {\n      return(\n        songs.map(song => {\n          return(\n            <div className=\"tracks-container\" key={song.id}>\n              <div className=\"tracks-info\">\n                <div className=\"track-name\">\n                  <strong>{song.name}</strong>\n                </div>\n                <div className=\"track-artist\">{song.artist_name}</div>\n              </div>\n              <div className=\"tracks-action\">\n                <i className=\"fas fa-minus-circle remove-track\"></i>\n              </div>\n            </div>\n          );\n        })\n      );\n    } else {\n      return 'This playlist is empty.';\n    }\n  }\n\n  render() {\n    const { playlist_name, songs } = this.props;\n    const countLabel = songs.length > 1 ? 'tracks' : 'track';\n    return(\n      <div className=\"playlist-container\">\n        <div className=\"playlist-details-container\" onClick={this.handleShowTracks}>\n          <div className=\"playlist-name\">\n            <strong>{playlist_name}</strong>&nbsp;\n            <i className={this.state.iconClass}></i>\n          </div>\n          <div className=\"playlist-info\">\n            {songs.length} {countLabel}\n          </div>\n        </div>\n        <div className=\"track-details\">\n          {\n            this.state.showTracks ? this.trackDetails() : null\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Playlist;\n","import {\n  PLAYLISTS_FETCH,\n  PLAYLISTS_ADD,\n  PLAYLIST_POST,\n  PLAYLIST_ADD\n} from '../constants/actionTypes';\n\nconst doFetchPlaylists = () => ({\n  type: PLAYLISTS_FETCH\n});\n\nconst doAddPlaylists = playlists => ({\n  type: PLAYLISTS_ADD,\n  playlists\n});\n\nconst doPostPlaylist = playlistName => ({\n  type: PLAYLIST_POST,\n  playlistName\n});\n\nconst doAddPlaylist = playlist => ({\n  type: PLAYLIST_ADD,\n  playlist\n});\n\nexport {\n  doFetchPlaylists,\n  doAddPlaylists,\n  doPostPlaylist,\n  doAddPlaylist\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Playlist from './Playlist';\n\nimport { doFetchPlaylists, doPostPlaylist } from '../actions/playlists';\n\nimport '../styles/playlists.css';\n\nconst mapStateToProps = state => ({\n  playlists: state.playlistsState\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFetchPlaylists: () => dispatch(doFetchPlaylists()),\n  onPostPlaylist: (playlistName) => dispatch(doPostPlaylist(playlistName))\n});\n\nclass Playlists extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playlistName: ''\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onFetchPlaylists();\n  }\n\n  handleChange(e) {\n    this.setState({ playlistName: e.target.value });\n  }\n\n  handleClick() {\n    this.props.onPostPlaylist(this.state.playlistName);\n  }\n\n  render() {\n    const { playlists } = this.props.playlists;\n    return(\n      <div className=\"playlists-container\">\n        <div className=\"playlists-header\">\n          <div className=\"playlists-header-text\">\n            <h1>playlists.</h1>\n            <h2>jams for every occasion</h2>\n          </div>\n          <div className=\"search-field\">\n            <input type=\"text\"\n                   id=\"playlist-name\"\n                   placeholder=\"add a new playlist\"\n                   onChange={this.handleChange}\n            />\n            <button className=\"search-button\"\n                    id=\"artist-search\"\n                    type=\"button\"\n                    name=\"search\"\n                    onClick={this.handleClick}\n            >\n              <i className=\"searchy fas fa-music fa-5x fa-fw\"></i>\n            </button>\n          </div>\n        </div>\n        <div className=\"fetch-data\">\n          {\n            playlists.map(playlist => {\n              return <Playlist {...playlist} key={playlist.id}/>\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Playlists);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { doRemoveFavorite } from '../actions/favorites';\n\nimport '../styles/favorite.css';\n\nconst mapDispatchToProps = dispatch => ({\n  onRemoveFavorite: (favoriteId) => dispatch(doRemoveFavorite(favoriteId))\n});\n\nclass Favorite extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.onRemoveFavorite(this.props.id);\n  }\n\n  render() {\n    const { name, artist_name, genre, song_rating } = this.props;\n    return(\n      <div className=\"favorite-container\">\n        <div>\n          <p className=\"favorite-title\">{name}</p>\n          <p className=\"favorite-info\">\n            <strong>Artist:</strong> {artist_name} |&nbsp;\n            <strong>Genre:</strong> {genre} |&nbsp;\n            <strong>Rating:</strong> {song_rating}\n          </p>\n        </div>\n        <div className=\"favorite-actions\">\n          <button onClick={this.handleClick}>\n            <i title=\"Remove Favorite\" className=\"favorite-button fas fa-heart fa-fw\"></i>\n          </button>\n          <button>\n            <i title=\"Add to Playlist\" className=\"playlist-button fas fa-music fa-fw\"></i>\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  undefined,\n  mapDispatchToProps\n)(Favorite);\n","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport { doFetchFavorites } from '../actions/favorites';\nimport '../styles/favorites.css';\n\nimport Favorite from './Favorite';\n\nconst mapStateToProps = state => ({\n  favorites: state.favoritesState\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onFetchFavorites: () => dispatch(doFetchFavorites())\n})\n\nclass Favorites extends Component {\n  componentDidMount() {\n    this.props.onFetchFavorites();\n  }\n\n  render() {\n    const { favorites } = this.props.favorites;\n    return(\n      <div className=\"favorites-container\">\n        <div className=\"favorites-header\">\n          <div className=\"favorites-header-text\">\n            <h1>favorites.</h1>\n            <h2>songs you can't live without</h2>\n          </div>\n        </div>\n        <div className=\"fetch-data\">\n          {\n            favorites.map(favorite => {\n              return <Favorite {...favorite} key={favorite.id} />\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Favorites);\n","import React, { Component } from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport NavBar from './NavBar';\nimport Search from './Search';\nimport Playlists from './Playlists';\nimport Favorites from './Favorites';\n\nimport '../styles/reset.css';\nimport '../styles/main.css';\n\nexport default class App extends Component {\n  render() {\n    return(\n      <div>\n        <Switch>\n          <Route exact path='/' component={Search} />\n          <Route path='/playlists' component={Playlists} />\n          <Route path='/favorites' component={Favorites} />\n        </Switch>\n        <NavBar />\n      </div>\n    )\n  }\n}\n","import {\n  ARTISTS_ADD\n} from '../constants/actionTypes';\n\nconst INITIAL_STATE = {\n  artists: [],\n  error: null\n};\n\nconst applyAddArtists = (state, action) => ({\n  artists: action.artists,\n  error: null\n});\n\nfunction artistsReducer(state = INITIAL_STATE, action) {\n  switch(action.type) {\n    case ARTISTS_ADD : {\n      return applyAddArtists(state, action);\n    }\n    default : return state;\n  }\n}\n\nexport default artistsReducer;\n","import {\n  TRACKS_ADD\n} from '../constants/actionTypes';\n\nconst INITIAL_STATE = {\n  tracks: [],\n  error: null\n};\n\nconst applyAddTracks = (state, action) => ({\n  tracks: action.tracks,\n  error: null\n});\n\nfunction artistsReducer(state = INITIAL_STATE, action) {\n  switch(action.type) {\n    case TRACKS_ADD : {\n      return applyAddTracks(state, action);\n    }\n    default : return state;\n  }\n}\n\nexport default artistsReducer;\n","import {\n  FAVORITES_ADD,\n  FAVORITE_REMOVE_LOCAL\n} from '../constants/actionTypes';\n\nconst INITIAL_STATE = {\n  favorites: [],\n  error: null\n};\n\nconst applyAddFavorites = (state, action) => ({\n  favorites: action.favorites,\n  error: null\n});\n\nconst applyRemoveFavorite = (state, action) => ({\n  favorites: state,\n  error: null\n});\n\nfunction favoritesReducer(state = INITIAL_STATE, action) {\n  switch(action.type) {\n    case FAVORITES_ADD : {\n      return applyAddFavorites(state, action)\n    }\n    case FAVORITE_REMOVE_LOCAL : {\n      let newState = Object.assign([], state);\n      newState = newState.favorites.filter(favorite => {\n        return favorite.id !== action.favoriteId;\n      })\n      return applyRemoveFavorite(newState, action);\n    }\n    default : return state;\n  }\n}\n\nexport default favoritesReducer;\n","import {\n  PLAYLISTS_ADD\n} from '../constants/actionTypes';\n\nconst INITIAL_STATE = {\n  playlists: [],\n  error: null\n};\n\nconst applyAddPlaylists = (state, action) => ({\n  playlists: action.playlists,\n  error: null\n});\n\nfunction playlistsReducer(state = INITIAL_STATE, action) {\n  switch(action.type) {\n    case PLAYLISTS_ADD : {\n      return applyAddPlaylists(state, action);\n    }\n    default : return state;\n  }\n}\n\nexport default playlistsReducer;\n","import { combineReducers } from 'redux';\n\nimport artistsReducer from './artists';\nimport tracksReducer from './tracks';\nimport favoritesReducer from './favorites';\nimport playlistsReducer from './playlists';\n\nconst rootReducer = combineReducers({\n  artistsState: artistsReducer,\n  tracksState: tracksReducer,\n  favoritesState: favoritesReducer,\n  playlistsState: playlistsReducer\n});\n\nexport default rootReducer;\n","const MUSIX_MATCH_URL = 'https://api.musixmatch.com/ws/1.1';\n\nconst fetchArtists = artistsName => {\n  return fetch(`https://cors-anywhere.herokuapp.com/${MUSIX_MATCH_URL}/artist.search?q_artist=${artistsName}&format=json&apikey=6ad28f3bfd8438979401eba5775e6ae2&page_size=30`, {\n    mode: 'cors',\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  })\n    .then(response => response.json())\n}\n\nexport { fetchArtists };\n","import { call, put } from 'redux-saga/effects';\n\nimport { doAddArtists, doFetchArtistsError } from '../actions/artists';\nimport { fetchArtists } from '../api/artists';\n\nfunction* handleFetchArtists(action) {\n  const { artistName } = action;\n  try {\n    const result = yield call(fetchArtists, artistName);\n    yield put(doAddArtists(result.message.body.artist_list));\n  } catch (error) {\n    yield put(doFetchArtistsError(error));\n  }\n}\n\nexport {\n  handleFetchArtists\n};\n","const MUSIX_MATCH_URL = 'https://api.musixmatch.com/ws/1.1';\n\nconst fetchTracks = artistId => {\n  return fetch(`https://cors-anywhere.herokuapp.com/${MUSIX_MATCH_URL}/track.search?f_artist_id=${artistId}&format=json&apikey=6ad28f3bfd8438979401eba5775e6ae2&page_size=30&s_track_rating=desc`, {\n    mode: 'cors',\n    method: 'GET',\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  })\n    .then(response => response.json())\n}\n\nexport { fetchTracks };\n","import { call, put } from 'redux-saga/effects';\n\nimport { doAddTracks, doFetchTracksError } from '../actions/tracks';\nimport { fetchTracks } from '../api/tracks';\n\nfunction* handleFetchTracks(action) {\n  const { artistId } = action;\n  try {\n    const result = yield call(fetchTracks, artistId);\n    yield put(doAddTracks(result.message.body.track_list));\n  } catch (error) {\n    yield put(doFetchTracksError(error));\n  }\n}\n\nexport {\n  handleFetchTracks\n};\n","const PLAY_URL = 'https://sheltered-lake-54213.herokuapp.com';\n\nconst postFavorite = songData => {\n  const payload = {\n    name: songData.track_name,\n    artist_name: songData.artist_name,\n    genre: 'Genre',\n    song_rating: songData.track_rating\n  }\n  return fetch(PLAY_URL + '/api/v1/songs', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(payload)\n  });\n};\n\nconst fetchFavorites = () => {\n  return fetch(PLAY_URL + '/api/v1/songs', {\n    method: 'GET'\n  })\n    .then(response => response.json())\n};\n\nconst deleteFavorite = favoriteId => {\n  return fetch(PLAY_URL + '/api/v1/songs/' + favoriteId, {\n    method: 'DELETE',\n    mode: 'cors'\n  });\n};\n\nexport {\n  postFavorite,\n  fetchFavorites,\n  deleteFavorite\n};\n","import { call, put } from 'redux-saga/effects';\n\nimport {\n  doAddFavoriteError,\n  doAddFavorites,\n  doFetchFavoritesError,\n  doRemoveFavoriteLocal\n} from '../actions/favorites';\nimport { postFavorite, fetchFavorites, deleteFavorite } from '../api/favorites';\n\nfunction* handlePostFavorite(action) {\n  const { songData } = action;\n  try {\n    yield call(postFavorite, songData);\n  } catch(error) {\n    yield put(doAddFavoriteError(error));\n  }\n}\n\nfunction* handleFetchFavorites(action) {\n  try {\n    const result = yield call(fetchFavorites);\n    yield put(doAddFavorites(result));\n  } catch(error) {\n    yield put(doFetchFavoritesError(error));\n  }\n}\n\nfunction* handleRemoveFavorite(action) {\n  const { favoriteId } = action;\n  try {\n    yield call(deleteFavorite, favoriteId);\n    yield put(doRemoveFavoriteLocal(favoriteId));\n  } catch(error) {\n    console.error(error);\n  }\n}\n\nexport {\n  handlePostFavorite,\n  handleFetchFavorites,\n  handleRemoveFavorite\n};\n","const PLAY_URL = 'https://sheltered-lake-54213.herokuapp.com';\n\nconst fetchPlaylists = () => {\n  return fetch(PLAY_URL + '/api/v1/playlists', {\n    method: 'GET'\n  })\n    .then(response => response.json())\n};\n\nconst postPlaylist = playlistName => {\n  const payload = {\n    playlist_name: playlistName\n  };\n\n  return fetch(PLAY_URL + '/api/v1/playlists', {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(payload)\n  })\n    .then(response => response.json())\n};\n\nexport {\n  fetchPlaylists,\n  postPlaylist\n};\n","import { call, put } from 'redux-saga/effects';\n\nimport { doAddPlaylists, doFetchPlaylists } from '../actions/playlists';\nimport { fetchPlaylists, postPlaylist } from '../api/playlists';\n\nfunction* handleFetchPlaylists(action) {\n  try {\n    const result = yield call(fetchPlaylists);\n    yield put(doAddPlaylists(result));\n  } catch(error) {\n    console.log(error);\n  }\n}\n\nfunction* handlePostPlaylist(action) {\n  try {\n    yield call(postPlaylist, action.playlistName);\n    yield put(doFetchPlaylists());\n  } catch(error) {\n    console.error(error);\n  }\n}\n\nexport {\n  handleFetchPlaylists,\n  handlePostPlaylist\n};\n","import { takeEvery, all } from 'redux-saga/effects';\n\nimport {\n  ARTISTS_FETCH,\n  TRACKS_FETCH,\n  FAVORITE_POST,\n  FAVORITES_FETCH,\n  FAVORITE_REMOVE,\n  PLAYLISTS_FETCH,\n  PLAYLIST_POST\n} from '../constants/actionTypes';\n\nimport { handleFetchArtists } from './artists';\nimport { handleFetchTracks } from './tracks';\nimport {\n  handlePostFavorite,\n  handleFetchFavorites,\n  handleRemoveFavorite\n} from  './favorites';\nimport { handleFetchPlaylists, handlePostPlaylist } from './playlists';\n\n\nfunction *watchAll() {\n  yield all([\n    takeEvery(ARTISTS_FETCH, handleFetchArtists),\n    takeEvery(TRACKS_FETCH, handleFetchTracks),\n    takeEvery(FAVORITE_POST, handlePostFavorite),\n    takeEvery(FAVORITES_FETCH, handleFetchFavorites),\n    takeEvery(FAVORITE_REMOVE, handleRemoveFavorite),\n    takeEvery(PLAYLISTS_FETCH, handleFetchPlaylists),\n    takeEvery(PLAYLIST_POST, handlePostPlaylist)\n  ])\n}\n\nexport default watchAll;\n","import { createStore, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst logger = createLogger();\nconst saga = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  undefined,\n  applyMiddleware(saga, logger)\n);\n\nsaga.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './components/App';\n\nimport store from './store';\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>, \n  rootElement\n);\n"],"sourceRoot":""}